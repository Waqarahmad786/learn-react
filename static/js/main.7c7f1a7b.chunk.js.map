{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","react_default","a","createElement","style","height","alert","className","role","type","msg","Navbar","concat","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","htmlFor","Textform","_useState","useState","_useState2","Object","slicedToArray","Text","settext","Fragment","color","heading","value","background","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","split","join","filter","Element","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","backgroundColor","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.7c7f1a7b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  return (\r\n    <div style={{height: \"50px\"}}>\r\n    {props.alert && \r\n     <div className={`alert alert-primary alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>}\r\n</div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>  \r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/*<li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n  </li>*/}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n                              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                               </form>*/}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`} >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.togglemode}\r\n              type=\"checkbox\"\r\n             // role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  aboutText: \"set about here\",\r\n};\r\n","import React, {useState} from \"react\";\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleupclick = ()=> {\r\n       // console.log (\"Upper was clicked\" + Text);\r\n        let newText = Text.toUpperCase();\r\n        settext (newText) \r\n      props.showAlert(\"Converted to uppercase\",\"sucess\");\r\n      }\r\n\r\n        const handleloclick = ()=> {\r\n            // console.log (\"Upper was clicked\" + Text);\r\n             let newText = Text.toLowerCase()\r\n             settext (newText) \r\n             props.showAlert(\"Converted to lowercase\",\"sucess\");}\r\n\r\n             const handleclearclick = ()=> {\r\n                // console.log (\"Upper was clicked\" + Text);\r\n                 let newText = \" \";\r\n                 settext (newText)\r\n                 props.showAlert(\"cleared text\",\"sucess\"); }\r\n\r\n                 const handleextraspace = ()=> {\r\n                   let newText = Text.split(/[ ]+/)\r\n                   settext (newText.join(\" \"))\r\n                   props.showAlert(\"extra spaces removed\",\"sucess\");\r\n                   }\r\n  \r\n    const handleonchange = (event)=> {\r\n        //console.log (\"On change\");\r\n        settext (event.target.value); }\r\n  const [Text, settext] = useState('');\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n        <h1 className=\"mb-2\">{props.heading}</h1>\r\n      <div className=\"mb-2\" >\r\n        <textarea className=\"form-control \" value={Text }  style={{background:props.mode==='dark'?'#3d3a70':'white',color:props.mode==='dark'?'white':'black'}} onChange={handleonchange} id=\"emybox\" rows=\"8\" ></textarea>\r\n      </div>\r\n      <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleupclick}>Convert to Uppercase</button>\r\n      <button disabled={Text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleloclick}>Convert to Lowercase</button>\r\n      <button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleextraspace}>Remove Extra space</button>\r\n      <button disabled={Text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleclearclick}>Clear Text</button>\r\n      \r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{Text.split(\" \").filter((Element)=>{return Element.length!==0}).length} words and {Text.length} character</p>\r\n            <p>{ 0.008 * Text.split(\" \").filter((Element)=>{return Element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length>0?Text:\"Nothing to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import  { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Alert from \"./components/Alert\";\r\n//import About from './components/About';\r\nimport Navbar from \"./components/Navbar\";\r\nimport Textform from \"./components/Textform\";\r\nimport React from \"react\";   \r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState(\"light\");\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert= (message, type)=>{\r\n    setAlert({\r\n      msg:message,\r\n      type:type,\r\n    })\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 3000);\r\n  }\r\n\r\n\r\n\r\n  const togglemode = ()=>{\r\n    if (mode === \"light\"){\r\n      setMode(\"dark\");\r\n     document.body.style.backgroundColor='hsl(242deg 82% 21%)';\r\n     showAlert(\"dark mode has been enable\",\"sucess\")\r\n    } \r\n       else {setMode(\"light\");\r\n      document.body.style.backgroundColor='white';\r\n      showAlert(\"Light mode has been enable\",\"sucess\")\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n   {/* <Router>*/}\r\n      <Navbar\r\n        title=\"TextUtils\"\r\n        aboutText=\"About\"\r\n        mode={mode}\r\n        togglemode={togglemode}\r\n      />\r\n      <Alert alert= {alert}/>\r\n\r\n\r\n      <div className=\"container my-3\">\r\n        \r\n       \r\n       {/* <Switch>\r\n          <Route exact path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/Home\">\r\n          \r\n          </Route>\r\n  </Switch>*/}\r\n      </div>\r\n      {/*</Router>*/}\r\n      <Textform heading=\"TextUtils - Word counter | charater counter\" mode={mode} showAlert={showAlert}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}